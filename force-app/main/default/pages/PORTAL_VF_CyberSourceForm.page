<apex:page controller="PORTAL_CyberSourceFormController" showHeader="false" sidebar="false"
    lightningStyleSheets="true">
    <html lang="en" xmlns="http://www.w3.org/1999/xhtml" style="background-color: #f7f7f7;">

    
    <style type="text/css">
        input[type=text] {
            width: 90%%;
            margin-bottom: 20px;
            padding: 12px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9 {
            padding-right: 0px !important; 
            padding-left: 0px !important;
        }

        label {
            display:block !important;
        }

        .form {
            background-color: #f7f7f7;
            margin: auto;
            text-align:left;
            display:inline-block;
            padding: 1rem;
        }

        @font-face {
        font-family: 'Noah-Bold';
        src: url({!URLFOR($Resource.PORTAL_Fonts, '/Noah/NoahBold/font.woff')}) format('woff');
        }
        /* line 883, src/sass/style.scss */
        .button-list {
        padding: .4rem 0;
        margin: 1rem 0 0;
        font-size: 1.1em; }
        /* line 888, src/sass/style.scss */
        .button-list img {
            width: 19px; }
            /* line 891, src/sass/style.scss */
            .button-list img svg {
            width: 100%; }
        /* line 894, src/sass/style.scss */
        .button-list.center {
            width: 100%;
            text-align: center;
            justify-content: center; }
            /* line 899, src/sass/style.scss */
            .button-list.center .button {
            margin-right: 0; }
        /* line 902, src/sass/style.scss */
        .button-list.text {
            margin-top: 6px; }
            /* line 905, src/sass/style.scss */
            .button-list.text a {
            display: flex;
            align-items: center; }
            /* line 906, src/sass/style.scss */
            .button-list.text a:first-of-type {
                margin-right: 10px; }
        /* line 912, src/sass/style.scss */
        .button-list .button {
            margin-right: 8px; }
            /* line 916, src/sass/style.scss */
            .button-list .button.has-icon:hover {
            background-color: white;
            color: #005595; }
            /* line 922, src/sass/style.scss */
            .button-list .button.full-mobile {
            margin-right: 0;
            margin-bottom: .7rem; }
            /* line 926, src/sass/style.scss */
            .button-list .button.full-mobile:last-of-type {
                margin-bottom: 0; }
            /* line 931, src/sass/style.scss */
            .button-list .button.disabled {
            opacity: .5;
            pointer-events: none; }
        /* line 937, src/sass/style.scss */
        .button-list.controls .button {
            width: 100%;
            margin-right: 0;
            margin-bottom: 10px;
            flex: 1 1 100%;
            text-align: center;
            display: block; }

        .button {
            font-family: 'Noah-Bold' !important;
            background-color: #005595 !important;
            color: white !important;
            padding: .5em 1.1em !important;
            border-radius: 3px !important;
            font-weight: bold !important;
            font-size: 1.1em !important;
            transition: background-color 300ms, color 300ms !important;
            border: none !important;
            -webkit-appearance: none !important;
            -moz-appearance: none !important;
            appearance: none !important;
            text-decoration: none !important;
            display: inline-block !important;
            background-image: initial !important;
            background-repeat: initial !important;
            background-position: initial !important;
            margin: 1px !important;
        /*  img {
                width: 18px;
                height: 18px;
                position: relative;
                top: -2px;
                left: -5px;
            }
        */ }
        /* line 971, src/sass/style.scss */
        .button.slds-button_icon {
            padding: .5em !important; }
        /* line 975, src/sass/style.scss */
        .button.primary {
            background-color: #005595;
            color: white;
            border: 1px solid #005595; }
            /* line 980, src/sass/style.scss */
            .button.primary:hover {
            background-color: #00c0f3;
            border: 1px solid #00c0f3;
            color: white;
            text-decoration: none; }
            /* line 985, src/sass/style.scss */
            .button.primary:hover svg .outline {
                fill: white; }
            /* line 988, src/sass/style.scss */
            .button.primary svg {
            height: 17px;
            width: 17px;
            position: relative;
            top: -2px;
            right: 0px; }
            /* line 995, src/sass/style.scss */
            .button.primary svg .outline {
                fill: white; }
        /* line 1001, src/sass/style.scss */
        .button.secondary {
            background-color: white;
            border: 1px solid #cdcfd8;
            color: #005595; }
            /* line 1006, src/sass/style.scss */
            .button.secondary:hover {
            background-color: #00c0f3;
            border: 1px solid #00c0f3;
            color: white;
            text-decoration: none; }
            /* line 1012, src/sass/style.scss */
            .button.secondary:hover svg {
                fill: white; }
            /* line 1014, src/sass/style.scss */
            .button.secondary:hover svg .outline {
                fill: white; }
            /* line 1017, src/sass/style.scss */
            .button.secondary svg {
            height: 17px;
            width: 17px;
            position: relative;
            top: -1px;
            right: 0px; }
            /* line 1024, src/sass/style.scss */
            .button.secondary svg .outline {
                fill: #005595; }
        /* line 1032, src/sass/style.scss */
        .button.tertiary.light {
            background-color: transparent;
            border: 1px solid white;
            color: white; }
            /* line 1037, src/sass/style.scss */
            .button.tertiary.light:hover {
            background-color: #00c0f3;
            border: 1px solid #00c0f3;
            color: white;
            text-decoration: none; }
        /* line 1045, src/sass/style.scss */
        .button.tertiary.dark {
            background-color: transparent;
            color: #005595;
            border: 1px solid #005595; }
            /* line 1050, src/sass/style.scss */
            .button.tertiary.dark:hover {
            background-color: #00c0f3;
            border: 1px solid #00c0f3;
            color: white;
            text-decoration: none; }
        /* line 1058, src/sass/style.scss */
        .button.tertiary.bare {
            position: relative;
            color: #005595;
            padding: 0;
            border: none;
            background: transparent; }
            /* line 1065, src/sass/style.scss */
            .button.tertiary.bare:after {
            content: '\003E';
            position: absolute;
            left: 110%;
            top: 2px; }
            /* line 1072, src/sass/style.scss */
            .button.tertiary.bare:hover {
            background-color: transparent;
            border: none;
            color: #00c0f3 !important;
            text-decoration: none; }
            /* line 1078, src/sass/style.scss */
            .button.tertiary.bare:hover:after {
                color: #00c0f3; }
        /* line 1085, src/sass/style.scss */
        .button.small {
            font-size: .9rem;
            padding: .5rem .7rem; }
        /* line 1090, src/sass/style.scss */
        .button.full-width {
            width: 100%;
            padding-left: 0;
            padding-right: 0;
            text-align: center;
            margin-bottom: .6em; }
            /* line 1097, src/sass/style.scss */
            .button.full-width:last-of-type {
            margin-bottom: 0; }
        /* line 1103, src/sass/style.scss */
        .button.full-mobile {
            width: 100%;
            text-align: center; }
        /* line 1108, src/sass/style.scss */
        .button:active, .button:focus {
            color: white !important;
            text-decoration: none !important;
            background-color: #00c0f3;
            border: 1px solid #00c0f3; }
    </style>

        <head>
            <meta charset="utf-8" />
            <meta http-equiv="X-UA-Compatible" content="IE=edge" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>Checkout</title>
            <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous" />
            <link rel="stylesheet" href="site.css" />
        </head>

        <div class="form" style="text-align: center; padding-left: 1em; padding-right: 1em;">
            <h1>Checkout</h1>
            <div style="padding-bottom: 10px">
                <apex:include pageName="PORTAL_GooglePay"></apex:include>
            </div>
            <div style="padding-bottom: 10px">
                <apex:include pageName="PORTAL_ApplePay"></apex:include>
            </div>
            <form action="/token" id="my-sample-form" method="post">
                <div class="form-group">
                    <label for="full_name">Name</label>
                    <input id="full_name" class="form-control" name="full_name" placeholder="Name on the card"></input>
                </div>

                <div class="form-group">
                    <label id="cardNumber-label">Card Number</label>
                    <div id="number-error" role="alert" style="color:red;"></div>
                    <div id="number-container" class="form-control"></div>
                </div>

                <div class="form-group">
                    <label for="securityCode-container">Security Code</label>
                    <div id="securityCode-error" role="alert" style="color:red;"></div>
                    <div id="securityCode-container" class="form-control"></div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="expMonth">Expiry month</label>
                        <select id="expMonth" class="form-control">
                            <option>01</option>
                            <option>02</option>
                            <option>03</option>
                            <option>04</option>
                            <option>05</option>
                            <option>06</option>
                            <option>07</option>
                            <option>08</option>
                            <option>09</option>
                            <option>10</option>
                            <option>11</option>
                            <option>12</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="expYear">Expiry year</label>
                        <select id="expYear" class="form-control">
                        </select>
                    </div>
                </div>
                <div id="errors-output" role="alert" style="color:red;"></div>
                <div class="button-list">
                    <button class="button secondary" id="cancel-button" type="button">Previous</button>
                    <button class="button secondary" id="pay-button" type="button">Submit Payment</button>
                    <input type="hidden" id="flexresponse" name="flexresponse"></input>
                </div>
                <!-- <button type="button" id="cancel-button" class="btn btn-primary">Cancel</button>
                <button type="button" id="pay-button" class="btn btn-primary">Pay</button> -->
            </form>
        </div>


        
        <script src="https://flex.cybersource.com/cybersource/assets/microform/0.11/flex-microform.min.js"></script>

        <script type="application/javascript">
            const lexOrigin = "{!lexOrigin}";

            const cancelButton = document.getElementById("cancel-button");
            cancelButton.addEventListener('click', () => {
                window.parent.postMessage({type:"previous"}, lexOrigin);
            });

            window.addEventListener("message", (event) => {
                let eventData = event.data;
                if (event.origin === lexOrigin && typeof eventData === 'string') {
                    eventData = JSON.parse(event.data);
                }

                if (event.origin === lexOrigin && eventData.type === "isUpdate" && eventData.value) {
                    var titleHeader = document.querySelector('h1');
                    if (titleHeader) {
                        titleHeader.textContent = 'Update';
                    }

                    var previousButton = document.querySelector('#cancel-button');
                    if (previousButton) {
                        previousButton.remove();
                    }

                    var submitButton = document.querySelector('#pay-button');
                    if (submitButton) {
                        submitButton.textContent = 'Update';
                    }
                }
                else if (event.origin === lexOrigin && eventData.type === "initialize") {
                    const opts = eventData;
                    const captureContext = "{!captureContext}";
                    var payButton = document.querySelector('#pay-button');
                    var errorsOutput = document.querySelector('#errors-output');
                    var numberError = document.querySelector('#number-error');
                    var securityCodeError = document.querySelector('#securityCode-error');
                    
                    // custom styles that will be applied to each field we create using Microform
                    var myStyles = {  
                    'input': {    
                        'font-size': '14px',    
                        'font-family': 'Noah-Bold',    
                        'color': '#555'  
                    },  
                    ':focus': { 'color': 'blue' },  
                    ':disabled': { 'cursor': 'not-allowed' },  
                    'valid': { 'color': '#3c763d' },  
                    'invalid': { 'color': '#a94442' }
                    };

                    // setup Microform
                    var flex = new Flex(captureContext);
                    var microform = flex.microform({ styles: myStyles });
                    var number = microform.createField('number', { placeholder: 'Enter card number' });
                    var securityCode = microform.createField('securityCode', { placeholder: '•••', maxLength: 4 });
                    
                    number.load('#number-container');
                    securityCode.load('#securityCode-container');

                    let yearSelect = document.querySelector('#expYear');
                    let currentYear = new Date().getFullYear()

                    for (var year = currentYear; year <= currentYear + 5; year++){
                        var opt = document.createElement('option');
                        opt.value = year;
                        opt.innerHTML = year;
                        yearSelect.appendChild(opt);
                    }

                    const displayOptions = opts.displayOptions;
                    if (displayOptions) {
                        if (displayOptions.full_name) {
                            document.getElementById("full_name").value = displayOptions.full_name;
                        }
                    }

                    payButton.addEventListener('click', function() {
                        // Compiling MM & YY into optional parameters	 
                        var options = {    
                            expirationMonth: document.querySelector('#expMonth').value,  
                            expirationYear: document.querySelector('#expYear').value
                        };
                        microform.createToken(options, function (err, token) {
                        if (err) {
                            // handle error
                            console.error(err);

                            errorsOutput.textContent = err.message;

                            securityCodeError.textContent = '';
                            numberError.textContent = ''
                            for (const eachErrorDetail of err.details) {
                                if (eachErrorDetail.location == 'number') {
                                    numberError.textContent = eachErrorDetail.message;
                                }
                                if (eachErrorDetail.location == 'securityCode') {
                                    securityCodeError.textContent = eachErrorDetail.message;
                                }
                            }
                            
                        } else {
                            //clear error messages and send the request with an event
                            errorsOutput.textContent = '';
                            securityCodeError.textContent = '';
                            numberError.textContent = '';
                            window.parent.postMessage({ type: "payment_method", token: token}, lexOrigin);
                        }
                        });
                    });
                }
            });

            window.parent.postMessage({ type: "ready" }, lexOrigin);
            
        </script>

    </html>
</apex:page>
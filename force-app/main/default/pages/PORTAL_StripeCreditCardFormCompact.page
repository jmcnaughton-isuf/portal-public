<apex:page controller="PORTAL_StripeCreditCardFormController" showHeader="false" sidebar="false">
    <head>
        <script src="https://js.stripe.com/v3/"></script>
    </head>

    <style type="text/css">
        @font-face {
            font-family:'Lato';
            font-style:normal;
            font-weight:300;
            src: url("{!URLFOR($Resource.PORTAL_Fonts, 'Lato/Lato-Light.ttf')}");
        }
        @font-face {
            font-family:'Lato';
            font-style:normal;
            font-weight:700;
            src: url("{!URLFOR($Resource.PORTAL_Fonts, 'Lato/Lato-Bold.ttf')}");
        }
        @font-face {
            font-family:'Lato';
            font-style:normal;
            font-weight:400;
            src: url("{!URLFOR($Resource.PORTAL_Fonts, 'Lato/Lato-Regular.ttf')}");
        }
        @font-face {
            font-family:'Lato';
            font-style:normal;
            font-weight:100;
            src: url("{!URLFOR($Resource.PORTAL_Fonts, 'Lato/Lato-Thin.ttf')}");
        }
        @font-face {
            font-family:'Lato';
            font-style:normal;
            font-weight:900;
            src: url("{!URLFOR($Resource.PORTAL_Fonts, 'Lato/Lato-Black.ttf')}");
        }

        form,
        body,
        label,
        input {
            font-family: 'Lato', sans-serif;
        }

        label {
            font-weight: 800;
            font-size: 13px;
            text-transform: uppercase;
        }
            
        .giving-card-buttons {
            width: 100%;
            display: flex;
            justify-content: space-between;
            margin-top: 25px;
            bottom: 25px;
            box-sizing: border-box;
            padding: 0 20px;
            position: absolute;
        }
    
        .giving-card-buttons>button {
            border: none;
            background: #2574A9;
            color: white;
            font-size: 16px;
            padding: 8px 25px;
            border-radius: 5px;
            transition: .25s all ease-in-out;
            font-family: 'Lato', sans-serif;
            font-weight: 400;
            display: flex;
            align-items: center;
        }
    
        .giving-card-buttons>button:hover {
            background-color: #1C577F;
            transition: .25s all ease-in-out;
        }

        .stripe-input {
            padding: 10px;
            border: 1px solid #2574A9;
            margin: 2px 0 20px 0;
        }
    </style>

    <body style="background-color: transparent !important;">
        <!-- <div id="payment-request-button">
        </div>-->
        <form id="payment-form" style="padding-left: 20px; padding-right: 20px;">
            <div id="payment-request-button">
                <!-- A Stripe Element will be inserted here. -->
            </div>
            <div >
                <label>Credit Card:</label>
            </div>
            <div class="stripe-input" id="card-number">
                <!-- Elements will create input elements here -->
            </div>
            <div>
                <label>Expiration Date:</label>
            </div>
            <div class="stripe-input" id="card-expiration">
                <!-- Elements will create input elements here -->
            </div>
            <div>
                <label>CVC:</label>
            </div>
            <div class="stripe-input" id="card-cvc">
            <!-- Elements will create input elements here -->
            </div>
            <div id="card-errors" role="alert"></div>
        </form>
        <div class="giving-card-buttons" style="text-align: center">
            <button id="previous" type="button" onclick="previous()">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16" style="margin-right: 7px;">
                    <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
                </svg>
                Billing Details
            </button>
            <button id="submit" type="submit">
                Give                
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16" style="margin-left: 7px;">
                    <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/>
                </svg>
            </button>
        </div>
    </body>

    <script type="application/javascript">
        const lexOrigin = "{!lexOrigin}";
        window.addEventListener("message", (event) => {
            let eventData = event.data;
            if (event.origin === lexOrigin && typeof eventData === 'string') {
                eventData = JSON.parse(event.data);
            }
            
            if (event.origin === lexOrigin && eventData.type === "isUpdate" && eventData.value) {
                var previousButton = document.querySelector('#previous');
                if (previousButton) {
                    previousButton.remove();
                }

                var submitButton = document.querySelector('#submit');
                if (submitButton) {
                    submitButton.textContent = 'Update';
                }
            }
            else if (event.origin === lexOrigin && eventData.type === "initialize") {
                var stripeKey = eventData.stripeKey;
                var giftType = eventData.giftType;
                var amount = eventData.amount;

                var stripe = Stripe(stripeKey);
                var elements = stripe.elements();
                var style = {
                    base: {
                        
                    }
                };

                var cardNumber = elements.create("cardNumber", { style: style });
                cardNumber.mount("#card-number");
                cardNumber.on('change', ({error}) => {
                    let displayError = document.getElementById('card-errors');
                    if (error) {
                        displayError.textContent = error.message;
                    } else {
                        displayError.textContent = '';
                    }
                });
                var cardExpiry = elements.create("cardExpiry", { style: style });
                cardExpiry.mount("#card-expiration");
                cardExpiry.on('change', ({error}) => {
                    let displayError = document.getElementById('card-errors');
                    if (error) {
                        displayError.textContent = error.message;
                    } else {
                        displayError.textContent = '';
                    }
                });
                var cardCvc = elements.create("cardCvc", { style: style });
                cardCvc.mount("#card-cvc");
                cardCvc.on('change', ({error}) => {
                    let displayError = document.getElementById('card-errors');
                    if (error) {
                        displayError.textContent = error.message;
                    } else {
                        displayError.textContent = '';
                    }
                });

                var paymentRequest = stripe.paymentRequest({
                    country: 'US',
                    currency: 'usd',
                    total: {
                        label: 'Payment Total',
                        amount: Math.round(amount * 100),
                    },
                    requestPayerName: true,
                    requestPayerEmail: true,
                    disableWallets: {!disableWallets}
                });
                var prButton = elements.create('paymentRequestButton', {
                    paymentRequest: paymentRequest,
                });

                // Check the availability of the Payment Request API first.
                paymentRequest.canMakePayment().then(function(result) {
                    if (result) {
                        prButton.mount('#payment-request-button');
                    } else {
                        document.getElementById('payment-request-button').style.display = 'none';
                    }
                });

                paymentRequest.on('paymentmethod', function(ev) {
                    window.parent.postMessage({ type: "confirmed", paymentId: ev.paymentMethod.id}, lexOrigin);
                });

                var form = document.getElementById('submit');
                submit.addEventListener('click', async (event) => {
                    event.preventDefault();
                    // If the client secret was rendered server-side as a data-secret attribute
                    // on the <form> element, you can retrieve it here by calling `form.dataset.secret`
                    const result = await stripe.createPaymentMethod(
                        {
                            type: 'card',
                            card: cardNumber
                        }
                    );

                    if (result.error) {
                        // Show error to your customer (e.g., insufficient funds)
                        let displayError = document.getElementById('card-errors');
                        displayError.textContent = 'There was an error processing your payment. Please check your card information.';
                        console.log(result.error.message);
                    } else {
                        window.parent.postMessage({ type: "confirmed", paymentId: result.paymentMethod.id}, lexOrigin);
                    }
                });
            }
        });

        function previous() {
            window.parent.postMessage({type:"previous"}, lexOrigin)
        }

        window.parent.postMessage({ type: "ready" }, lexOrigin);

    </script>
    
    
</apex:page>